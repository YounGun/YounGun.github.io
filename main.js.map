{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/god-detail/god-detail.component.css","webpack:///./src/app/god-detail/god-detail.component.html","webpack:///./src/app/god-detail/god-detail.component.ts","webpack:///./src/app/god-list/god-list.component.css","webpack:///./src/app/god-list/god-list.component.html","webpack:///./src/app/god-list/god-list.component.ts","webpack:///./src/app/item-list/item-list.component.css","webpack:///./src/app/item-list/item-list.component.html","webpack:///./src/app/item-list/item-list.component.ts","webpack:///./src/app/smite.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\"","module.exports = \"<nav>\\n  <a routerLink=\\\"/gods\\\" routerLinkActive=\\\"active\\\">Gods</a>\\n  <a routerLink=\\\"/items\\\" routerLinkActive=\\\"active\\\">Items</a>\\n</nav>\\n<router-outlet></router-outlet>\"","import { Component, OnInit } from '@angular/core';\nimport { SmiteService } from './smite.service';\nimport { God } from './smite';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  providers: [ SmiteService ],\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'Smite';\n  gods: God[];\n\n  constructor(private smiteService: SmiteService) {\n    this.getGods();\n    console.log(this.gods);\n  }\n\n  getGods(): void {\n    this.smiteService.getGods()\n      .subscribe(gods => {\n        const arr = Object.values(gods);\n        this.gods = arr;\n        console.log(this.gods);\n    });\n   }\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http';\nimport { AppComponent } from './app.component';\nimport { SmiteService } from './smite.service';\nimport { RouterModule, Routes, Router } from '@angular/router';\nimport { GodDetailComponent } from './god-detail/god-detail.component';\nimport { GodListComponent } from './god-list/god-list.component';\nimport { ItemListComponent } from './item-list/item-list.component';\n\nconst appRoutes: Routes = [\n  { path: 'gods', component: GodListComponent },\n  { path: 'gods/:name', component: GodDetailComponent },\n  { path: 'items', component: ItemListComponent },\n];\n@NgModule({\n  declarations: [\n    AppComponent,\n    GodDetailComponent,\n    GodListComponent,\n    ItemListComponent\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule,\n    RouterModule.forRoot(\n      appRoutes,\n      {\n        enableTracing: false, // <-- debugging purposes only\n      }\n    )\n  ],\n  providers: [ SmiteService ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {\n  constructor(router: Router) {\n    // Use a custom replacer to display function names in the route configs\n    // const replacer = (key, value) => (typeof value === 'function') ? value.name : value;\n\n    // console.log('Routes: ', JSON.stringify(router.config, replacer, 2));\n  }\n}\n","module.exports = \".god {\\r\\n    display: inline-block;\\r\\n    vertical-align: top;\\r\\n    text-align: center;\\r\\n    width: 180px;\\r\\n}\\r\\nimg {\\r\\n    width: 180px;\\r\\n    height: 334px;\\r\\n    background-color: grey;\\r\\n}\\r\\n.caption {\\r\\n    display: block;\\r\\n}\"","module.exports = \"<div *ngIf=\\\"god$ | async as god\\\">\\n  <div class=\\\"god\\\">\\n    <img src=\\\"{{god.godCard_URL}}\\\">\\n    <span class=\\\"caption\\\"> {{god.Name}} </span>\\n  </div>\\n</div>\"","import { switchMap } from 'rxjs/operators';\nimport { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute, ParamMap } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { SmiteService } from '../smite.service';\nimport { God } from '../smite';\n\n@Component({\n  selector: 'app-god-detail',\n  templateUrl: './god-detail.component.html',\n  styleUrls: ['./god-detail.component.css']\n})\nexport class GodDetailComponent implements OnInit {\n  god$: Observable<God>;\n  constructor(\n    private route: ActivatedRoute,\n    private router: Router,\n    private service: SmiteService\n  ) { }\n\n  ngOnInit() {\n    this.god$ = this.route.paramMap.pipe(\n      switchMap((params: ParamMap) =>\n        this.service.getGod(params.get('name')))\n    );\n  }\n  gotoGods(god: God) {\n    const godName = god ? god.Name : null;\n    // Pass along the hero id if available\n    // so that the HeroList component can select that hero.\n    // Include a junk 'foo' property for fun.\n    this.router.navigate(['/gods', {name: godName}]);\n  }\n\n}\n","module.exports = \".god {\\r\\n    display: inline-block;\\r\\n    vertical-align: top;\\r\\n    text-align: center;\\r\\n    width: 120px;\\r\\n}\\r\\nimg {\\r\\n    width: 100px;\\r\\n    height: 100px;\\r\\n    background-color: grey;\\r\\n}\\r\\nimg:hover {\\r\\n    -webkit-transform: translate(0, -5px);\\r\\n            transform: translate(0, -5px);\\r\\n  }\\r\\n.caption {\\r\\n    display: block;\\r\\n}\"","module.exports = \"<!DOCTYPE html>\\n<html>\\n<head>\\n  <title>Title of the document</title>\\n</head>\\n\\n<body>\\n    <h1>Smite Gods</h1>\\n    <div class=\\\"god\\\" *ngFor=\\\"let god of gods\\\" [class.selected]=\\\"god.Name === selectedName\\\">\\n        <a [routerLink]=\\\"['/gods', god.Name]\\\" routerLinkActive=\\\"active\\\">\\n            <img class=\\\"test\\\" src=\\\"{{god.godIcon_URL}}\\\" alt=\\\"{{god.Name}}\\\">\\n        </a>\\n        <span class=\\\"caption\\\"> {{god.Name}} </span>\\n    </div>\\n    \\n  \\n</body>\\n\\n\\n\\n</html> \"","import { Component, OnInit } from '@angular/core';\nimport { SmiteService } from '../smite.service';\nimport { God } from '../smite';\n\n@Component({\n  selector: 'app-god-list',\n  templateUrl: './god-list.component.html',\n  providers: [ SmiteService ],\n  styleUrls: ['./god-list.component.css']\n})\nexport class GodListComponent {\n  title = 'Smite';\n  gods: God[];\n\n  constructor(private smiteService: SmiteService) {\n    this.getGods();\n    console.log(this.gods);\n  }\n\n  getGods(): void {\n    this.smiteService.getGods()\n      .subscribe(gods => {\n        const arr = Object.values(gods);\n        this.gods = arr;\n        console.log(this.gods);\n    });\n   }\n}\n","module.exports = \".item {\\r\\n    display: inline-block;\\r\\n    vertical-align: top;\\r\\n    text-align: center;\\r\\n    width: 120px;\\r\\n}\\r\\nimg {\\r\\n    width: 100px;\\r\\n    height: 100px;\\r\\n    background-color: grey;\\r\\n}\\r\\nimg:hover {\\r\\n    -webkit-transform: translate(0, -5px);\\r\\n            transform: translate(0, -5px);\\r\\n  }\\r\\n.caption {\\r\\n    display: block;\\r\\n}\"","module.exports = \"<!DOCTYPE html>\\n<html>\\n<head>\\n  <title>Title of the document</title>\\n</head>\\n\\n<body>\\n    <h1>Smite Gods</h1>\\n    <div class=\\\"item\\\" *ngFor=\\\"let item of items\\\" [class.selected]=\\\"item.DeviceName === selectedName\\\">\\n          <img class=\\\"test\\\" src=\\\"{{item.itemIcon_URL}}\\\" alt=\\\"{{item.DeviceName}}\\\">\\n        <span class=\\\"caption\\\"> {{item.DeviceName}} </span>\\n    </div>\\n    \\n  \\n</body>\\n\\n\\n\\n</html> \"","import { Component, OnInit } from '@angular/core';\nimport { SmiteService } from '../smite.service';\nimport { Item } from '../smite';\n\n@Component({\n  selector: 'app-item-list',\n  templateUrl: './item-list.component.html',\n  providers: [ SmiteService ],\n  styleUrls: ['./item-list.component.css']\n})\nexport class ItemListComponent {\n  items: Item[];\n\n  constructor(private smiteService: SmiteService) {\n    this.getItems();\n    console.log(this.items);\n  }\n\n  getItems(): void {\n    this.smiteService.getItems()\n      .subscribe(items => {\n        const arr = Object.values(items);\n        this.items = arr;\n        console.log(this.items);\n    });\n  }\n}\n\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable, of } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { God, Item } from './smite';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SmiteService {\n  smiteGodsUrl = '../assets/godsData.json';\n  smiteItemsUrl = '../assets/itemsData.json';\n  constructor(private http: HttpClient) { }\n\n  getGods(): Observable<God[]> {\n    return this.http.get<God[]>(this.smiteGodsUrl);\n  }\n  getGod(name: String): Observable<God> {\n    return this.getGods().pipe(\n      // (+) before `id` turns the string into a number\n      map((gods: God[]) => gods.find(god => god.Name === name))\n    );\n  }\n\n  getItems(): Observable<Item[]> {\n    return this.http.get<Item[]>(this.smiteItemsUrl);\n  }\n\n}\n\n\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}